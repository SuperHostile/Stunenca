+-5 Add a good method of deleting nodes 

+-3 Add tree.find_name function

+-5 Add the node-component function for parents.
	-1 You can identify a node as having a component by creating a "component". Then, when adding that node as a children to another node, you can use self.find_component in the parent node to get the "component" field in the children node.

+-4 Add physics module
	- Colliders as children nodes
	- Queries
	- Local or global collision classes
	- 


+-4 Add timers
	+-3 Types, You set a time and after that it executes a function and deletes itself (after), It executes a function every frame in that time (for), You set a time and after that it executes a function and does the same as if it was just created (Every)

-3 Add spritesheet manager
	-2 Animation
	-2 System for non equal dimensions and/or positions of textures (For graphical toolset)

-3 Add sprite class
	-2 Animation system
	-2 Sprite layering

-3 GUI stuff
	-2

-2 Add input module

-2 Tilemap system

-2 Create factory nodes for instantiating nodes from files

+-2 Implement the local coordinate system

-2 Particle system editor
	- Particles as children nodes

-1 Add networking (needs node factories and input module)

-1 Tweens
	+-1 Use someone else's tween system
	+-1 Add the ability to synchronize tables to collider's positions
	-1 When stopping a tween, stop the synced colliders
	-1 Implement my own tween system
	-1 Sync colliders to the target positions of the tween

-1 Graphical toolset
	-1 Scene editor
	-1 Tilemap editor
	-2 Spritesheet editor

-4 Bug fixing
	-4 Test colliders with node.get_x and node.get_y


	
